{"/home/travis/build/npmtest/node-npmtest-product-recommender/test.js":"/* istanbul instrument in package npmtest_product_recommender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-product-recommender/lib.npmtest_product_recommender.js":"/* istanbul instrument in package npmtest_product_recommender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_product_recommender = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_product_recommender = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-product-recommender/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-product-recommender && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_product_recommender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_product_recommender\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_product_recommender.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_product_recommender.rollup.js'] =\n            local.assetsDict['/assets.npmtest_product_recommender.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_product_recommender.__dirname + '/lib.npmtest_product_recommender.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-product-recommender/node_modules/product-recommender/index.js":"var RecommendationEngine    = require('./node/engine');\nvar Analytics = require('./node/analytics');\nvar RecommendationVariables = require('./node/variables').GetSet;\nvar helpers   = require('./node/helpers');\n\nvar Recommender = {};\n\nhelpers._extend(Recommender, RecommendationEngine, Analytics, RecommendationVariables);\n\nmodule.exports = Recommender;\n","/home/travis/build/npmtest/node-npmtest-product-recommender/node_modules/product-recommender/node/engine.js":"var rec = require('./variables').rec;\nvar Engine = {};\n\nEngine.setRecVariables = function(matrix, cb, names, prods){\n  var path;\n  if(Array.isArray(matrix)){\n    path = false;\n  } else if (typeof matrix === 'string'){\n    path = true;\n  }\n  cb = cb || function(){};\n\n  names = JSON.stringify(names);\n  prods = JSON.stringify(prods);\n\n  var python = require('child_process').spawn(\n    'python',\n    [__dirname + '/../lib/exec.py', names, prods, matrix, path]);\n  output = '';\n  python.stdout.on('data', function(data){\n    output += data;\n  });\n  python.stdout.on('close', function(){\n    _buildRecVariables(output);\n    args = Array.prototype.slice.call(arguments,4);\n    cb.apply(this,args);\n  });\n};\n\nvar _buildRecVariables = function(output){\n  var results = JSON.parse(output);\n\n  rec.rawResults             = results;\n  rec.customers              = results[0];\n  rec.products               = results[4];\n  rec.purchaseHistory        = results[14];\n  rec.hasPurchased           = results[9];\n  rec.customersMap           = results[1];\n  rec.productsMap            = results[3];\n  rec.productClusters        = results[2];\n  rec.productClustersMap     = results[10];\n  rec.customerMatrix         = results[12];\n  rec.productMatrix          = results[13];\n  rec.customerClusterHelpers = results[6];\n  rec.customerClusters       = rec.customerClusterHelpers[0];\n  rec.recommendationMatrix   = rec.customerClusterHelpers[6];\n  \n  rec.subClustersHelpers     = [];\n  var productClusterLocator  = results[11];\n\n  productClusterLocator.forEach(function(locator){\n    if(locator[0] === 'sub'){\n      rec.subClustersHelpers.push(results[7][locator[1]]);\n    } else{\n      rec.subClustersHelpers.push(results[8][locator[1]]);\n    }\n  });\n  \n  rec.subClusters            = [];\n  rec.subClustersHelpers.forEach(function(helper){\n    rec.subClusters.push(helper[0]);\n  });\n\n  rec.powerClustersHelpers   = results[8];\n  rec.powerClusters          = [];\n\n  rec.powerClustersHelpers.forEach(function(helper){\n    rec.powerClusters.push(helper[0]);\n  });\n  rec.powerRecMatrix         = results[5];\n  \n  rec.pastRecommendations    = {};\n  rec.customers.forEach(function(customer){\n    rec.pastRecommendations[customer] = {};\n  });\n\n  rec.results                = [rec.customers, rec.products, rec.purchaseHistory, rec.hasPurchased, rec.customersMap,\n                                rec.productsMap, rec.productClusters, rec.productClustersMap, rec.customerMatrix, rec.productMatrix,\n                                rec.customerClusterHelpers,rec.customerClusters, rec.recommendationMatrix, rec.subClustersHelpers,\n                                rec.subClusters, rec.powerClustersHelpers, rec.powerClusters, rec.powerRecMatrix, rec.pastRecommendations];\n};\n\nmodule.exports = Engine;\n","/home/travis/build/npmtest/node-npmtest-product-recommender/node_modules/product-recommender/node/variables.js":"// private object\nvar rec = {};\nvar GetSet = {};\nvar Variables = {'rec': rec, 'GetSet': GetSet};\n\nrec.results                = null;\nrec.rawResults             = null;\nrec.customers              = null;\nrec.products               = null;\nrec.purchaseHistory        = null;\nrec.hasPurchased           = null;\nrec.customersMap           = null;\nrec.productsMap            = null;\nrec.productClusters        = null;\nrec.productClustersMap     = null;\nrec.customerMatrix         = null;\nrec.productMatrix          = null;\nrec.customerClusterHelpers = null;\nrec.customerClusters       = null;\nrec.recommendationMatrix   = null;\nrec.subClustersHelpers     = null;\nrec.subClusters            = null;\nrec.powerClustersHelpers   = null;\nrec.powerClusters          = null;\nrec.powerRecMatrix         = null;\nrec.pastRecommendations    = null;\n\n// can only directly access these keys through below methods\nGetSet.getRecVariable = function(key){\n  if(rec[key] === undefined){\n    throw new Error('not a valid recommendation variable');\n  } else if(rec[key] === null){\n    throw new Error('variable is null.  please run setRecVariables');\n  } else{\n    return rec[key];\n  }\n};\n\nGetSet.getRecKeys = function(){\n  return Object.keys(rec);\n};\n\n// use with caution\nGetSet.loadRecVariable = function(key, value){\n  if(rec[key] === undefined){\n    throw new Error('not a valid recommendation variable');\n  } else{\n    rec[key] = value;\n  }\n};\n\n// use with caution\nGetSet.loadRecVariables = function(keys, values){\n  if(keys.length > values.length){\n    throw new Error('Each key must have a value');\n  } else if (keys.length < values.length){\n    throw new Error('Each value must have a key');\n  } else{\n    keys.forEach(function(key, i){\n      this.loadRecVariable(key, values[i]);\n    });\n  }\n};\n\nmodule.exports = Variables;\n","/home/travis/build/npmtest/node-npmtest-product-recommender/node_modules/product-recommender/node/analytics.js":"var rec = require('./variables').rec;\nvar helpers = require('./helpers');\nvar Analytics = {};\n\nAnalytics.recommender = function(name, matrix){\n  matrix = matrix || rec.recommendationMatrix;\n  helpers._nameChecker(name);\n  helpers._recVariableChecker();\n  var recommendation = matrix[rec.customersMap[name]].pop();\n  var attraction = Object.keys(recommendation)[0];\n  var product = recommendation[attraction];\n  if(rec.pastRecommendations[name][product] === true){\n    return this.recommender(name,matrix);\n  } else{\n    rec.pastRecommendations[name][product] = true;\n  }\n  return product;\n};\n\nAnalytics.recommendByProduct = function(name, product){\n  var matrix;\n  if(product === undefined){\n    matrix = rec.recommendationMatrix;\n  }\n  else{\n    index = helpers._productClusterFinder(product);\n    matrix = rec.subClustersHelpers[index][6];\n  }\n  return this.recommender(name, matrix);\n};\n\nAnalytics.powerRecommendation = function(name){\n  return this.recommender(name, rec.powerRecMatrix);\n};\n\nAnalytics.pastCustomerRecommendations = function(name){\n  helpers._nameChecker(name);\n  helpers._recVariableChecker();\n  return rec.pastRecommendations[name];\n};\n\nAnalytics.getCustomerCluster = function(name){\n  helpers._nameChecker(name);\n  helpers._recVariableChecker();\n  var index = rec.customerClusterHelpers[2][name];\n  var cluster = rec.customerClusters[index].slice();\n  return cluster;\n};\n\nAnalytics.getCustomerClusterByProduct = function(name, product){\n  helpers._nameChecker(name);\n  helpers._productChecker(product);\n  helpers._recVariableChecker();\n  var subClustIndex = helpers._productClusterFinder(product);\n  var map = rec.subClustersHelpers[index][2];\n  var cluster = rec.subClusters[index];\n  var related = cluster[map[name]].slice();\n  return related;\n};\n\nAnalytics.getProductCluster = function(product){\n  var index = helpers._productClusterFinder(product);\n  var cluster = rec.productClusters[index].slice();\n  return cluster;\n};\n\nAnalytics.relatedCustomers = function(name){\n  var cluster = this.getCustomerCluster(name);\n  cluster.splice(cluster.indexOf(name), 1);\n  return cluster;\n};\n\nAnalytics.relatedCustomersByProduct = function(name, product){\n  var related = this.getCustomerClusterByProduct(name, product);\n  related.splice(related.indexOf(name), 1);\n  return related;\n};\n\nAnalytics.relatedProducts = function(product){\n  var cluster = this.getProductCluster(product);\n  cluster.splice(cluster.indexOf(product), 1);\n  return cluster;\n};\n\nAnalytics.nearestNeighbors = function(name, num, overflow){\n  return helpers._findNearestNeighbors(name, num, 'customers', overflow);\n};\n\nAnalytics.nearestNeighborhoods = function(name, num){\n  return helpers._findNearestNeighborhoods(name, num, 'customers');\n};\n\nAnalytics.nearestProducts = function(name, num, overflow){\n  return helpers._findNearestNeighbors(name, num, 'products', overflow);\n};\n\nAnalytics.nearestProductNeighborhoods = function(name, num){\n  return helpers._findNearestNeighborhoods(name, num, 'products');\n};\n\nmodule.exports = Analytics;\n","/home/travis/build/npmtest/node-npmtest-product-recommender/node_modules/product-recommender/node/helpers.js":"var rec = require('./variables').rec;\nvar helpers = {};\n\nhelpers._findNearestNeighborhoods = function(name, num, type){\n  var map;\n  var matrix;\n  var list;\n  if(type === 'customers'){\n    map = rec.customersMap;\n    matrix = rec.customerMatrix;\n    list = rec.customers;\n    this._nameChecker(name);\n  } else if(type === 'products'){\n    map = rec.productsMap;\n    matrix = rec.productMatrix;\n    list = rec.products;\n    this._productChecker(name);\n  } else{\n    throw new Error('Invalid type.  Find neighbors for customers or products.');\n  }\n  this._recVariableChecker();\n  num = num || 1;\n  if(typeof(num) !== 'number' || num%1 !== 0){\n    throw new Error('second parameter should be an integer');\n  }\n  var index = map[name];\n  var dists = matrix[index];\n  var similarity = [];\n  var results = [];\n  var ind;\n  var obj;\n\n  dists.forEach(function(dist, i){\n    if(index !== i){\n      if(similarity.length < num || dist < similarity[similarity.length-1]){\n        ind = this._binarySearch(dist, similarity);\n        if(similarity[ind] === dist){\n          results[ind][dist].push(list[i]);\n        } else{\n          if(dist < similarity[similarity.length-1] && similarity.length >= num){\n            similarity.pop();\n            results.pop();\n          }\n          similarity.splice(ind, 0, dist);\n          obj  = {};\n          obj[dist] = [list[i]];\n          results.splice(ind, 0, obj);\n        }\n      }\n      else if (dist === similarity[similarity.length-1]){\n        results[similarity.length-1][dist].push(list[i]);\n      }\n    }\n  }.bind(this));\n\n  return results;\n};\n\n\nhelpers._findNearestNeighbors = function(name, num, type, overflow){\n  var results = [];\n  var i;\n  var neighborhood;\n  var neighbor;\n  num = num || 1;\n  if(overflow === undefined){\n    overflow = true;\n  }\n  \n  var neighbors = this._findNearestNeighborhoods(name, num, type);\n  for(i = 0; i < num; i++){\n    if(results.length < num){\n      for(var j in neighbors[i]){\n          neighborhood = neighbors[i][j];\n        for(var k = 0; k < neighborhood.length; k++){\n          neighbor = neighborhood[k];\n          results.push(neighbor);\n        }\n      }\n    } else {\n      break;\n    }\n  }\n\n  if(!overflow){\n    var len = results.length;\n    for(i = num; i < len; i++){\n      results.pop();\n    }\n  }\n  return results;\n};\n  \nhelpers._nameChecker = function(name){\n  if(name === undefined || typeof(rec.customersMap[name]) !== 'number'){\n    throw new Error('invalid name. name does not exist in the data set.');\n  }\n};\n\nhelpers._productChecker = function(product){\n  if(product === undefined || typeof(rec.productsMap[product]) !== 'number'){\n    throw new Error('invalid product. product does not exist in the data set.');\n  }\n};\n\nhelpers._recVariableChecker = function(){\n  if (rec.results === 'null'){\n    throw new Error('recommendation variables are null. please run setRecVariables');\n  }\n};\n\nhelpers._productClusterFinder = function(product){\n  this._recVariableChecker();\n  this._productChecker(product);\n  var index = rec.productClustersMap[product];\n  return index;\n};\n\nhelpers._binarySearch = function(item, arr, low, high){\n  low = low || 0;\n  high = high || arr.length;\n  var median = Math.floor((low+high)/2);\n  if(low === high){\n    return high;\n  }\n  else if(item < arr[median]){\n    if(low === median){\n      return low;\n    }\n    return this._binarySearch(item, arr, low, median);\n  }\n  else if(item > arr[median]){\n    if(low === high-1){\n      return this._binarySearch(item, arr, low+1, high);\n    }\n    return this._binarySearch(item, arr, median, high);\n  }\n  else{\n    return median;\n  }\n};\n\nhelpers._extend = function(obj1){\n  args = Array.prototype.slice.call(arguments, 1);\n  args.forEach(function(obj){\n    for(var key in obj){\n      obj1[key] = obj[key];\n    }\n  });\n};\n\nmodule.exports = helpers;\n"}